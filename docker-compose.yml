version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    extra_hosts:
      - host.docker.internal:host-gateway
    env_file:
      - .dev.env
    # MySQL이 살아 있고 Redis가 시작된 뒤에만 기동
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - socket-network
      - ssafitv-network

  mysql:
    image: mysql:8.2.0
    restart: always
    volumes:
      - ./mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${SFTV_MYSQL_DATABASE}
      MYSQL_USER: ${SFTV_MYSQL_USER}
      MYSQL_PASSWORD: ${SFTV_MYSQL_PASSWORD}
      MYSQL_ROOT_HOST: "%"
      DEFAULT_AUTHENTICATION_PLUGIN: caching_sha2_password

    # ── healthcheck: 서비스가 ready 상태인지 확인 ──
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-p${MYSQL_ROOT_PASSWORD}", "--silent"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 10s

    networks:
      - socket-network
      - ssafitv-network

  redis:
    env_file:
      - .dev.env
    image: redis:7-alpine
    restart: always
    command: sh -c "redis-server --requirepass ${REDIS_PASSWORD}"
    ports:
      - "6379:6379"
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_URL: ${REDIS_URL}
    networks:
      - socket-network
      - ssafitv-network

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    environment:
      APP_SERVER: ${APP_SERVER}
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.listen-address=:9090'
    networks:
      - socket-network
      - ssafitv-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_USER: ${GF_SECURITY_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
      GF_USERS_ALLOW_SIGN_UP: "false"
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - socket-network
      - ssafitv-network

volumes:
  mysql-data:
  grafana-data:

networks:
  socket-network:
    driver: bridge
  ssafitv-network:
    external: true
